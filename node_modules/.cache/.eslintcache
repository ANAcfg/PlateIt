[{"/Users/saradurmic/Desktop/PlateIt/src/index.js":"1","/Users/saradurmic/Desktop/PlateIt/src/reportWebVitals.js":"2","/Users/saradurmic/Desktop/PlateIt/src/components/App.js":"3"},{"size":546,"mtime":1670885367849,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1670885367849,"results":"6","hashOfConfig":"5"},{"size":2833,"mtime":1670886395787,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"8rtohc",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/saradurmic/Desktop/PlateIt/src/index.js",[],[],[],"/Users/saradurmic/Desktop/PlateIt/src/reportWebVitals.js",[],[],"/Users/saradurmic/Desktop/PlateIt/src/components/App.js",["19"],[],"import React,{useState, useEffect,useRef,memo} from \"react\";\nimport Select from 'react-select';\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from '@fullcalendar/interaction';\n\nimport '../styles/App.css';\n\nconst test = [\n  { label: 'pleasework', value: 'pleasework' },\n];\n\nconst ExternalDrag = memo(({event}) =>{\n  let elemRef = useRef(null);\n  useEffect(()=>{\n    let draggable = new Draggable(elemRef.current, {\n      eventData: function (){\n        return{ ...event, create: true};\n      }\n    });\n    return() => draggable.destroy()\n  })\n  return(\n    <div \n      ref = {elemRef}\n      className=\"fc-event\" \n      title={event.title}\n      >\n      <div>\n      {event.title}\n\n      </div>\n      \n    </div>\n  )\n\n\n});\nfunction App() {\n  // const events = [{title: \"today's event\", date: new Date()}];\n  // let array  =[\n  //     {title:\"event 1\", id:\"1\"},\n  //     {title:\"event 2\", id: \"2\"}\n  //   ]\n  const [recepies,setRecipes] = useState([\n    {title:\"event 1\", id:\"1\"},\n    {title:\"event 2\", id: \"2\"}\n  ]);\n\n\n   window.onload=function(){\n\n   \n\n    // selecting the elements for which we want to add a tooltip\n    const target = document.getElementById(\"draggable\");\n    const tooltip = document.getElementById(\"tooltip-text\");\n    \n    // change display to 'block' on mouseover\n    target.addEventListener('mouseover', () => {\n      tooltip.style.display = 'block';\n    }, false);\n    \n    // change display to 'none' on mouseleave\n    target.addEventListener('mouseleave', () => {\n      tooltip.style.display = 'none';\n    }, false);\n    \n    }\n\n    // document.querySelector(\"\").addEventListener(\"click\")\n\n\n \n  \n\n\n    \n  return (\n    <div className=\"App\">\n      \n      <h1 >\n       Plate it!\n      </h1>\n\n      <div id = \"searchbar\">\n      <Select\n        options={test}\n        onChange={opt => console.log(opt.label, opt.value)}\n      />\n      </div>\n      <div></div>\n      <div class=\"hide\">I am shown when someone hovers over the div above.</div>\n\n      <div class=\"tooltip-container\">\n  <p id=\"tooltip-text\">The tooltip text{1}.</p>\n</div>\n\n      <div>\n        <div id = \"draggable\">\n          {recepies.map((event) => (\n            <ExternalDrag key ={event.id} event = {event}/>\n\n          ))}\n        </div>\n    \n      \n\n        <FullCalendar \n          headerToolbar={{\n            left: \"\",\n            center: \"title\",\n            right: \"timeGridWeek,timeGridDay\"\n          }}\n          selectable\n          \n          plugins={[timeGridPlugin,interactionPlugin]} \n\n          eventClick ={\n            function(arg){\n            // alert(arg.event.title)\n            alert(arg.event.start)\n            }\n\n          }\n\n          \n          \n          \n\n          />\n      </div>\n    </div>\n  );\n}\n\nexport default App;",{"ruleId":"20","severity":1,"message":"21","line":45,"column":19,"nodeType":"22","messageId":"23","endLine":45,"endColumn":29},"no-unused-vars","'setRecipes' is assigned a value but never used.","Identifier","unusedVar"]