{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript Projects\\\\PlateIt\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, memo } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from '@fullcalendar/interaction';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExternalDrag = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(_ref => {\n  _s();\n  let {\n    event\n  } = _ref;\n  let elemRef = useRef(null);\n  useEffect(() => {\n    let draggable = new Draggable(elemRef.current, {\n      eventData: function () {\n        return {\n          ...event,\n          create: true\n        };\n      }\n    });\n    return () => draggable.destroy();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: elemRef,\n    className: \"fc-event\",\n    title: event.title,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}, \"bhK5JvaxHES9e/M5CmL+8EKADM0=\")), \"bhK5JvaxHES9e/M5CmL+8EKADM0=\");\n_c2 = ExternalDrag;\nfunction App() {\n  _s2();\n  // const events = [{title: \"today's event\", date: new Date()}];\n  // let array  =[\n  //     {title:\"event 1\", id:\"1\"},\n  //     {title:\"event 2\", id: \"2\"}\n  //   ]\n  const [recepies, setRecepies] = useState([{\n    title: \"event 1\",\n    id: \"1\"\n  }, {\n    title: \"event 2\",\n    id: \"2\"\n  }]);\n  window.onload = function () {\n    // selecting the elements for which we want to add a tooltip\n    const target = document.getElementById(\"draggable\");\n    const tooltip = document.getElementById(\"tooltip-text\");\n\n    // change display to 'block' on mouseover\n    target.addEventListener('mouseover', () => {\n      tooltip.style.display = 'block';\n    }, false);\n\n    // change display to 'none' on mouseleave\n    target.addEventListener('mouseleave', () => {\n      tooltip.style.display = 'none';\n    }, false);\n  };\n\n  // document.querySelector(\"\").addEventListener(\"click\")\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plate it!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"hide\",\n      children: \"I am shown when someone hovers over the div above.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"tooltip-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"tooltip-text\",\n        children: [\"The tooltip text\", 1, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"draggable\",\n        children: recepies.map(event => /*#__PURE__*/_jsxDEV(ExternalDrag, {\n          event: event\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n        headerToolbar: {\n          left: \"\",\n          center: \"title\",\n          right: \"timeGridWeek,timeGridDay\"\n        },\n        selectable: true,\n        plugins: [timeGridPlugin, interactionPlugin]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"yhJ9ZGhx4kMDJVB7CRLN6C+lKRs=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ExternalDrag$memo\");\n$RefreshReg$(_c2, \"ExternalDrag\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","memo","FullCalendar","timeGridPlugin","interactionPlugin","Draggable","ExternalDrag","event","elemRef","draggable","current","eventData","create","destroy","title","App","recepies","setRecepies","id","window","onload","target","document","getElementById","tooltip","addEventListener","style","display","map","left","center","right"],"sources":["C:/Javascript Projects/PlateIt/src/components/App.js"],"sourcesContent":["import React,{useState, useEffect,useRef,memo} from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin, { Draggable } from '@fullcalendar/interaction';\r\n\r\nimport '../styles/App.css';\r\n\r\nconst ExternalDrag = memo(({event}) =>{\r\n  let elemRef = useRef(null);\r\n  useEffect(()=>{\r\n    let draggable = new Draggable(elemRef.current, {\r\n      eventData: function (){\r\n        return{ ...event, create: true};\r\n      }\r\n    });\r\n    return() => draggable.destroy()\r\n  })\r\n  return(\r\n    <div \r\n      ref = {elemRef}\r\n      className=\"fc-event\" \r\n      title={event.title}\r\n      >\r\n      <div>\r\n      {event.title}\r\n\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n\r\n\r\n});\r\nfunction App() {\r\n  // const events = [{title: \"today's event\", date: new Date()}];\r\n  // let array  =[\r\n  //     {title:\"event 1\", id:\"1\"},\r\n  //     {title:\"event 2\", id: \"2\"}\r\n  //   ]\r\n  const [recepies,setRecepies] = useState([\r\n    {title:\"event 1\", id:\"1\"},\r\n    {title:\"event 2\", id: \"2\"}\r\n  ]);\r\n\r\n\r\n   window.onload=function(){\r\n\r\n   \r\n\r\n    // selecting the elements for which we want to add a tooltip\r\n    const target = document.getElementById(\"draggable\");\r\n    const tooltip = document.getElementById(\"tooltip-text\");\r\n    \r\n    // change display to 'block' on mouseover\r\n    target.addEventListener('mouseover', () => {\r\n      tooltip.style.display = 'block';\r\n    }, false);\r\n    \r\n    // change display to 'none' on mouseleave\r\n    target.addEventListener('mouseleave', () => {\r\n      tooltip.style.display = 'none';\r\n    }, false);\r\n    \r\n    }\r\n\r\n    // document.querySelector(\"\").addEventListener(\"click\")\r\n\r\n\r\n \r\n  \r\n\r\n\r\n    \r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <h1 >\r\n       Plate it!\r\n      </h1>\r\n    \r\n\r\n      <div class=\"hide\">I am shown when someone hovers over the div above.</div>\r\n\r\n      <div class=\"tooltip-container\">\r\n  <p id=\"tooltip-text\">The tooltip text{1}.</p>\r\n</div>\r\n\r\n      <div>\r\n        <div id = \"draggable\">\r\n          {recepies.map((event) => (\r\n            <ExternalDrag key ={event.id} event = {event}/>\r\n\r\n          ))}\r\n        </div>\r\n    \r\n      \r\n\r\n        <FullCalendar \r\n          headerToolbar={{\r\n            left: \"\",\r\n            center: \"title\",\r\n            right: \"timeGridWeek,timeGridDay\"\r\n          }}\r\n          selectable\r\n          \r\n          plugins={[timeGridPlugin,interactionPlugin]} \r\n\r\n          \r\n          \r\n          \r\n\r\n          />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}